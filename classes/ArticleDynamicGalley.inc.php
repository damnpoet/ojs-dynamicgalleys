<?php/** * @file ArticleDynamicGalley.inc.php * * Copyright (c) 2003-2008 Richard González Alberto * Distributed under the GNU GPL v2. For full terms see the file docs/COPYING. * * @class ArticleDynamicGalley * @ingroup plugins_generic_dynamicGalleys * * @brief Article Dynamic galley model object */import('article.ArticleHTMLGalley');import('article.SuppFileDAO');class ArticleDynamicGalley extends ArticleGalley {	/**	 * Constructor.	 */	function ArticleDynamicGalley() {		parent::ArticleGalley();	}	/**	 * Check if galley is an HTML galley.	 * @return boolean	 */	function isHTMLGalley() {            return $this->getFileType() == 'text/html' ? true : false;	}	function isPdfGalley() {	    return false;	}	function isInlineable(){	    return false;	}	function getStyleFileId(){	    return false;	}        function getStyleFile(){            return false;        }        function getHTMLContents(){                        $dynamicGalleysPlugin = &PluginRegistry::getPlugin('generic', DYNAMIC_GALLEYS_PLUGIN_NAME);                        $dynamicGalleysPlugin->import('pages.DynamicGalleysHandler');            $galleyType = $this->getFileType() == 'text/html' ? 'html' : 'pdf';	    $handler = new DynamicGalleysHandler();            $html = $handler->showHtmlGalley($this->getArticleId(), false);            return $html;        }        function viewHtmlFileContents(){            $articleId = $this->getArticleId();            $galleyId = $this->getGalleyId();            list($journal, $issue, $article) = ArticleHandler::validate($articleId, $galleyId);            $rtDao = &DAORegistry::getDAO('RTDAO');            $journalRt = $rtDao->getJournalRTByJournal($journal);            $sectionDao = &DAORegistry::getDAO('SectionDAO');            $section = &$sectionDao->getSection($article->getSectionId());            if ($journalRt->getVersion()!=null && $journalRt->getDefineTerms()) {                    // Determine the "Define Terms" context ID.                    $version = $rtDao->getVersion($journalRt->getVersion(), $journalRt->getJournalId());                    if ($version) foreach ($version->getContexts() as $context) {                            if ($context->getDefineTerms()) {                                    $defineTermsContextId = $context->getContextId();                                    break;                            }                    }            }            $commentDao = &DAORegistry::getDAO('CommentDAO');            $enableComments = $journal->getSetting('enableComments');            if (($article->getEnableComments()) && ($enableComments == COMMENTS_AUTHENTICATED || $enableComments == COMMENTS_UNAUTHENTICATED || $enableComments == COMMENTS_ANONYMOUS)) {                    $comments = &$commentDao->getRootCommentsByArticleId($article->getArticleId());            }            $templateMgr = &TemplateManager::getManager();            $dynamicGalleyDao = &DAORegistry::getDAO('ArticleDynamicGalleyDAO');            /*if (!Request::isBot()) {                    // Increment the galley's views count                    $dynamicGalleyDao->                    $this->->incrementViews($galley->getGalleyId());            }*/            // Add font sizer js and css if not already in header            $additionalHeadData = $templateMgr->get_template_vars('additionalHeadData');            if (strpos(strtolower($additionalHeadData), 'sizer.js') === false) {                    $additionalHeadData .= $templateMgr->fetch('common/sizer.tpl');                    $templateMgr->assign('additionalHeadData', $additionalHeadData);            }            $templateMgr->assign_by_ref('issue', $issue);            $templateMgr->assign_by_ref('article', $article);            $templateMgr->assign_by_ref('galley', $this);            $templateMgr->assign_by_ref('section', $section);            $templateMgr->assign('articleId', $articleId);            $templateMgr->assign('postingAllowed', (                    ($article->getEnableComments()) && (                    $enableComments == COMMENTS_UNAUTHENTICATED ||                    (($enableComments == COMMENTS_AUTHENTICATED ||                    $enableComments == COMMENTS_ANONYMOUS) &&                    Validation::isLoggedIn()))            ));            $templateMgr->assign('galleyId', $galleyId);            $templateMgr->assign('defineTermsContextId', isset($defineTermsContextId)?$defineTermsContextId:null);            $templateMgr->assign('comments', isset($comments)?$comments:null);            $dynamicGalleysPlugin = &PluginRegistry::getPlugin('generic', 'DynamicGalleysPlugin');            $dynamicGalleysPlugin->import('DynamicGalleysHandler');            return $templateMgr->display($dynamicGalleysPlugin->getTemplatePath() . 'article.tpl');        }        function validate(){            import('issue.IssueAction');            $articleId = $this->getArticleId();            $galleyId = $this->getGalleyId();            $journal =& Request::getJournal();            $journalId = $journal->getJournalId();            $article = $publishedArticle = $issue = null;            $user =& Request::getUser();            $userId = $user?$user->getUserId():0;            $publishedArticleDao =& DAORegistry::getDAO('PublishedArticleDAO');            if ($journal->getSetting('enablePublicArticleId')) {                    $publishedArticle =& $publishedArticleDao->getPublishedArticleByBestArticleId($journalId, $articleId);            } else {                    $publishedArticle =& $publishedArticleDao->getPublishedArticleByArticleId((int) $articleId, $journalId);            }            $issueDao =& DAORegistry::getDAO('IssueDAO');            if (isset($publishedArticle)) {                    $issue = &$issueDao->getIssueByArticleId($publishedArticle->getArticleId(), $journalId);            } else {                    $articleDao =& DAORegistry::getDAO('ArticleDAO');                    $article =& $articleDao->getArticle((int) $articleId, $journalId);            }            return array($journal, $issue, $publishedArticle);        }	/**	 * Output file	 * @return string	 */	function viewFileContents() {        if($this->getFileType() == "text/html") $this->viewHtmlFileContents();	    else {		$dynamicGalleysPlugin = &PluginRegistry::getPlugin('generic', 'dynamicgalleysplugin');            	$dynamicGalleysPlugin->import('pages.DynamicGalleysHandler');		DynamicGalleysHandler::showPdfGalley($this->getArticleId());	    }	}}?>